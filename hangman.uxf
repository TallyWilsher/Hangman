<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>380</x><y>10</y><w>140</w><h>70</h></coordinates><panel_attributes>_Player_
--
letterGuess</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>590</x><y>10</y><w>140</w><h>70</h></coordinates><panel_attributes>_HangmanGame_
--
Player
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>510</x><y>30</y><w>100</w><h>50</h></coordinates><panel_attributes>lt=-
m1=1
m2=1
</panel_attributes><additional_attributes>10;20;80;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>270</x><y>130</y><w>230</w><h>210</h></coordinates><panel_attributes>_Player_
--
letterGuess: String
live: Number
--
guessLetter(keyUp: event): String
setPlayerLives(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>520</x><y>130</y><w>220</w><h>210</h></coordinates><panel_attributes>_HangmanGame_
--
+ randomWord: string
+ guessedLetters: Array&lt;String&gt;
+ isGuessCorrect: Boolean
+ hasPlayerWon: Boolean
--
+ startNewGame(): void
+ generateRandomWord(): String
+ checkGuess(letterGuess: String): Boolean
+ showGuessedLetter(letterGuess: String): String
+ decreaseLife(lives: Number): Number
+ playerWins(): void
+ playerLoses(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLFrame</id><coordinates><x>30</x><y>420</y><w>870</w><h>420</h></coordinates><panel_attributes>Opt</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>10</x><y>370</y><w>100</w><h>30</h></coordinates><panel_attributes>_:HangmanGame_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>600</x><y>370</y><w>100</w><h>30</h></coordinates><panel_attributes>_:player1:Player_</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLFrame</id><coordinates><x>30</x><y>470</y><w>870</w><h>370</h></coordinates><panel_attributes>opt</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>80</x><y>420</y><w>140</w><h>30</h></coordinates><panel_attributes>startNewGame(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>70</x><y>390</y><w>30</w><h>140</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;120</additional_attributes></element><element><id>Relation</id><coordinates><x>630</x><y>390</y><w>30</w><h>140</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;120</additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>630</x><y>510</y><w>20</w><h>60</h></coordinates><panel_attributes></panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>440</x><y>500</y><w>190</w><h>30</h></coordinates><panel_attributes>guessLetter(keyUp: event): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>80</x><y>440</y><w>140</w><h>30</h></coordinates><panel_attributes>setPlayerLives(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLGeneric</id><coordinates><x>50</x><y>510</y><w>160</w><h>60</h></coordinates><panel_attributes>+ checkGuess(letterGuess
: String): Boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>510</y><w>450</w><h>30</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;430;10</additional_attributes></element><element><id>Text</id><coordinates><x>50</x><y>690</y><w>190</w><h>30</h></coordinates><panel_attributes> isGuessCorrect: Boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>90</x><y>560</y><w>30</w><h>150</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;130;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>90</x><y>710</y><w>160</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
true</panel_attributes><additional_attributes>140;50;10;50;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>90</x><y>730</y><w>160</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
false</panel_attributes><additional_attributes>140;70;10;70;10;10</additional_attributes></element><element><id>Text</id><coordinates><x>230</x><y>750</y><w>270</w><h>30</h></coordinates><panel_attributes>+ showGuessedLetter(letterGuess: String): String
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>230</x><y>790</y><w>230</w><h>30</h></coordinates><panel_attributes>+ decreaseLife(lives: Number): Number</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>460</x><y>720</y><w>200</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
</panel_attributes><additional_attributes>180;10;180;90;10;90</additional_attributes></element><element><id>Text</id><coordinates><x>80</x><y>470</y><w>190</w><h>30</h></coordinates><panel_attributes>generateRandomWord(): String</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>770</x><y>600</y><w>120</w><h>30</h></coordinates><panel_attributes>+ playerWins(): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Text</id><coordinates><x>770</x><y>660</y><w>130</w><h>30</h></coordinates><panel_attributes>+ playerLoses(): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>510</x><y>720</y><w>150</w><h>70</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
</panel_attributes><additional_attributes>130;10;130;50;10;50</additional_attributes></element><element><id>Text</id><coordinates><x>560</x><y>690</y><w>150</w><h>30</h></coordinates><panel_attributes>+ hasPlayerWon: Boolean
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>630</x><y>590</y><w>160</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
true</panel_attributes><additional_attributes>140;20;10;20;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>630</x><y>570</y><w>50</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
false</panel_attributes><additional_attributes>10;10;10;120</additional_attributes></element><element><id>Relation</id><coordinates><x>630</x><y>650</y><w>160</w><h>40</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
false</panel_attributes><additional_attributes>140;20;10;20</additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>410</y><w>650</w><h>200</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;-
</panel_attributes><additional_attributes>10;20;630;20;630;180</additional_attributes></element><element><id>Relation</id><coordinates><x>820</x><y>610</y><w>30</w><h>70</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;10;10;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>950</x><y>0</y><w>590</w><h>660</h></coordinates><panel_attributes>halign=left
Hangman

USE CASE Description

1. A player guesses the hidden word letter by letter to win the game. 
If the player guesses too many wrong letters they lose the game

Triggers

1.A player clicks the new game button

Actors

1.the player who clicks the new game button
2.the player who guesses the letters
3.the hangman game

Preconditions

1. A player is available 
2. the button is clickable 

Goal

1. A player to guess the correct letters and win or guess the wrong letters and lose

Not Available

1. Fail state

Steps of Execution

1.A player clicks the new game button to start the game
2.A random word is generated but hidden
3.the length of the word is shown on the screen by underscores where the letters of the word would be.
4.A player then guesses letters using the keyboard
5.if the player guesses the letter correctly the letter is shown in place of the underscore, 
the player continues to guess until they win
6.if the player guesses the letter incorrectly the player loses a life
7.if the player guesses incorrectly 6 times before the word is guessed the player loses the game
8.if the player wins display that the player won and  show a button to restart the game
9.if the player loses display that the player lost and the hidden word, and show a button to restart the game
10.

</panel_attributes><additional_attributes></additional_attributes></element></diagram>